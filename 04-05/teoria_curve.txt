/*
la cubic hermit ritorna l'immagine della curva, un array di funzioni
per le superfici ce ne sono di pi√π

una volta disegnate due curve

var struct = STRUCT([drawCubicHermiteCurve([[2,0],[0,2],[0,3],[-3,0]],[1,0,0]), drawCubicHermiteCurve([[1,0],[0,1],[0,2],[-2,0]])]);

generiamo una curva

var controls1 = [[1,0,0],[0,1,0],[0,2,0],[-2,0,0]];
var controls2 = [[2,0,0],[0,2,0],[0,3,0],[-3,0,0]];

var domain1 = INTERVALS(1)(30);
var domain2 = DOMAIN([[0,1],[0,1]])([30,50]);

var c1 = CUBIC_HERMITE(S0)(controls1);
var c2 = CUBIC_HERMITE(S0)(controls2);

var curve1 = MAP(c1)(domain1);
var curve2 = MAP(c2)(domain1);

var struct = STRUCT([curve1,curve2]);

DRAW(struct);


var s12 = BEZIER(S1)([c1,c2]);

var surface12 = MAP(s12)(domain2);
DRAW(surface12);

//per il 3d aggiungere un terzo valore in controls

s12 = CUBIC_HERMITE(S1)([c1,c2,[0,0,3],[0,0,-3]]);
surface12 = MAP(s12)(domain2);
DRAW(surface12);
*/

/*
	altro esercizio
*/

//wing profile

var domain1 = INTERVALS(1)(100)
var controls = [[10,0,0],[0,5,0],[0,-3,0],[5,2,0],[10,0,0]];
var c1 = BEZIER(S0)(controls);
var curve = MAP (c1)(domain1)
DRAW(curve);

//abbiamo creato una ala
//T,S,R si applicano a un complesso simpliciale
//ma noi li utilizziamo ai punti di dominio

//scriviamo una funzine polypoint


/*
function POLYPOINT(points) {
	return SIMPLICIAL_COMPLEX(points)(
		points.map( function (p,i) {
			return [i];
		}
		));
}

var p1 = POLYPOINT(controls);
*/

var p0 = [[10,0,0],[0,5,0],[0,-3,0],[5,2,0],[10,0,0]];
var p1 = p0.map(function (p){return [p[0],p[1],p[2]+10]});
var p2 = p1.map(function (p){return [p[0],p[1],p[2]+10]});
var p3 = p2.map(function (p){return [p[0],p[1],p[2]+10]});
var p4 = p3.map(function (p){return [p[0],p[1],p[2]+10]});

var c0 = BEZIER(S0)(p0);
var c1 = BEZIER(S0)(p1);
var c2 = BEZIER(S0)(p2);
var c3 = BEZIER(S0)(p3);
var c4 = BEZIER(S0)(p4);

var curves = STRUCT(CONS(AA(MAP)([c0,c1,c2,c3,c4]))(domain1));
//DRAW(curves);

// in 3d

var domain2 = DOMAIN([[0,1],[0,1]])([30,50]);

var wingMapping = BEZIER(S1)([c0,c1,c2,c3,c4]);

var wing = MAP(wingMapping)(domain2);

DRAW(wing); 



/*
	altro esercizio
*/

//non uniform B spline

//NUBS(S0)(grado)(nodi)(controlli)

var domain1 = INTERVALS(1)(100)
var controls = [[0,0,0],[2,5,0],[7,3,0],[9,7,0],[12,2,0]];
var knots = [0,0,0,1,2,3,3,3];
var c1 = NUBS(S0)(2)(knots)(controls);
var curve1 = MAP(c1)(domain1);
DRAW(curve1);

var domain1 = INTERVALS(1)(100)
var controls = [[0,0,0],[2,5,3],[7,3,6],[9,7,-2],[12,2,-3]];
var knots = [0,0,0,1,2,3,3,3];
var c2 = NUBS(S0)(2)(knots)(controls);
var curve2 = MAP(c2)(domain1);
DRAW(curve2);

var domain2 = DOMAIN([[0,1],[0,1]])([30,50]);
var s12 = BEZIER(S1)([c1,c2]);
var surf = MAP(s12)(domain2);
DRAW(surf);